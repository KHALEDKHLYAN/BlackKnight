"use strict";!function(){function i(){return Math.floor(9*Math.random()+1)}function h(t,o){return $('div[data-col="'.concat(t,'"][data-row="').concat(o,'"]'))[0]}function e(){this.gridContainer=document.getElementById("grid-container"),this.player1=null,this.player2=null,this.barriers=[],this.weapons=e.WEAPONS,this.activePlayer="player1",this.defending=!1,this.isFirstTimeSettingUp=!0;var i=this;$(this.gridContainer).click(function(t){var o=t.target,e={col:Number(o.dataset.col),row:Number(o.dataset.row)};i.tryMoveActivePlayer(e),i.tryFight()})}var t="sword";function o(t,o){this.name=t,this.weapon=e.WEAPONS[o],this.position={col:1,row:1},this.lastPosition={col:1,row:1},this.health=100,this.inTurn=!1,this.fighting=!1,this.defending=!1}e.WEAPONS={sword:{key:"sword",position:null,damage:5},fire:{key:"fire",position:null,damage:5}},e.prototype.gameSetup=function(){this.barriers=[],this.weapons=e.WEAPONS,this.activePlayer="player1",this.createGrid();for(var t=0;t<13;t++)this.placeBarrier([t]);this.player1=this.createPlayer1(),this.player1.activePlayer=!0,this.placePlayer(this.player1),this.showAllMoves(this.player1.position),this.player2=this.createPlayer2(),this.placePlayer(this.player2),this.isReadyToFight()?this.gameSetup():(this.placeWeapon("sword"),this.placeWeapon("fire"),this.getPlayerStats(),!0!==this.isFirstTimeSettingUp?(console.log(this.player1),console.log(this.barriers),console.log(this.weapons)):this.actionButtons())},e.prototype.createPlayer1=function(){return new o("player1",t)},e.prototype.createPlayer2=function(){return new o("player2",t)},e.prototype.createGrid=function(){for(var t="",o=1;o<11;o++)for(var e=1;e<11;e++)t+="<div class='grid-item' data-col=".concat(e," data-row=").concat(o," ></div>");this.gridContainer.innerHTML=t},o.prototype.getPosition=function(){return h(this.position.col,this.position.row)},e.prototype.isPositionAvailable=function(t,o){return!h(t.col,t.row).classList.contains("taken")||(console.log("position taken"),o&&o(),!1)},e.prototype.putClass=function(t,o,e){console.log(o);var i=h(t.col,t.row);i.classList.add(o),e||i.classList.add("taken")},e.prototype.putWeaponInfo=function(t){var o=h(t.col,t.row);console.log(newClass+"is in this position"),o.classList.add("sword")},e.prototype.removeClass=function(t,o){var e=h(t.col,t.row);console.log(e),e.classList.remove(o),e.classList.remove("taken")},e.prototype.placeBarrier=function(){var t={col:i(),row:i()},o=this;this.isPositionAvailable(t,function(){o.placeBarrier()})&&(this.barriers.push(t),this.putClass(t,"barrier"))},e.prototype.placeWeapon=function(t){var o={col:i(),row:i()},e=this;this.isPositionAvailable(o,function(){e.placeWeapon(t)})&&(this.weapons[t].position=o,this.putClass(o,t,!0),console.log(t))},e.prototype.placePlayer=function(t){var o={col:i(),row:i()},e=this;this.isPositionAvailable(o,function(){e.placePlayer(t)})&&(t.moveTo(o,!0),this.putClass(o,t.name))},e.prototype.hasBarriers=function(t,o){var e=o.col==t.col?"row":"col",i="col"==e?t.col-o.col:t.row-o.row,a="col"==e?t.col-1:t.col,r="row"==e?t.row-1:t.row;i<0&&(a="col"==e?t.col+1:t.col,r="row"==e?t.row+1:t.row);var s={col:a,row:r},n=h(s.col,s.row);return!!n&&(n.classList.contains("barrier")?(console.log("barrier exists"),!0):Math.abs(i)!==Math.abs(t[e]-s[e])&&this.hasBarriers(s,o))},o.prototype.moveTo=function(t){console.log(t),this.lastPosition=Object.assign({},this.position),console.log(this.lastPosition),this.position=t},e.prototype.movePlayer=function(t,o){console.log(t),this.removeClass(t.position,t.name),this.putClass(o,t.name),t.moveTo(o),console.log(o),this.switchWeapon(t),console.log(t.weapon)},o.prototype.canMoveTo=function(t,o){var e=t.col===this.position.col?"row":"col",i=Math.abs(this.position.col-t.col),a=Math.abs(this.position.row-t.row),r="col"==e&&i<=3&&0===a||"row"==e&&a<=3&&0===i;return r&&o&&o(),r},e.prototype.tryMovePlayer=function(t,o){var e=this,i=h(o.col,o.row);t.canMoveTo(o,function(){e.isPositionAvailable(o)&&!e.hasBarriers(t.position,o)&&i.classList.contains("highlight")&&(console.log(e.activePlayer),e.movePlayer(t,o),e.removeShowMove(),e.switchActivePlayer(),e.showAllMoves(e[e.activePlayer].position))})},e.prototype.tryMoveActivePlayer=function(t){this.tryMovePlayer(this[this.activePlayer],t),console.log(this.activePlayer)},e.prototype.showMove=function(t){h(t.col,t.row).classList.add("highlight")},e.prototype.removeShowMove=function(){for(var t=document.getElementsByClassName("highlight");t[0];)t[0].classList.remove("highlight")},e.prototype.showAllMoves=function(t){for(var o={col:t.col,row:t.row},e=0;e<3;e++){o.row+=1;var i=h(o.col,o.row);if(!(0<o.row&&o.row<11&&!1===i.classList.contains("barrier")))break;this.showMove(o)}o.row=t.row;for(var a=0;a<3;a++){o.col+=1;var r=h(o.col,o.row);if(!(0<o.col&&o.col<11&&!1===r.classList.contains("barrier")))break;this.showMove(o)}o.col=t.col;for(var s=0;s<3;s++){--o.row;var n=h(o.col,o.row);if(!(0<o.row&&o.row<11&&!1===n.classList.contains("barrier")))break;this.showMove(o)}o.row=t.row;for(var l=0;l<3;l++){--o.col;var c=h(o.col,o.row);if(!(0<o.col&&o.col<11&&!1===c.classList.contains("barrier")))break;this.showMove(o)}o.col=t.col},e.prototype.findWeaponByPosition=function(o){return Object.values(this.weapons).find(function(t){return t.position&&t.position.col===o.col&&t.position.row===o.row})},e.prototype.switchWeapon=function(t){var o=t.position,e=this.findWeaponByPosition(o);e&&(this.weapons[t.weapon.key].position=o,this.putClass(o,t.weapon.key,!0),this.weapons[e.key].position=null,this.removeClass(o,e.key),t.weapon=this.weapons[e.key])},e.prototype.switchActivePlayer=function(){this.activePlayer="player1"===this.activePlayer?"player2":"player1";var t="player1"===this.activePlayer?"player2":"player1";this[this.activePlayer].activePlayer=!0,this[t].activePlayer=!1},e.prototype.isReadyToFight=function(){var t=this.player1.position.col,o=this.player1.position.row,e=this.player2.position.col,i=this.player2.position.row,a=Math.abs(t-e),r=Math.abs(o-i);return(1===a&&0===r||1===r&&0===a)&&(console.log("Player ready to fight"),!0)},e.prototype.getPlayerStats=function(){var t=document.querySelector("#knightHealthInput"),o=document.querySelector("#knightAttackInput");t.innerHTML=this.player1.health,o.innerHTML=this.player1.weapon.damage;var e=document.querySelector("#dragonHealthInput"),i=document.querySelector("#dragonAttackInput");e.innerHTML=this.player2.health,i.innerHTML=this.player1.weapon.damage},e.prototype.actionButtons=function(){var t=this;document.getElementById("player1-attack").onclick=function(){t.getPlayerStats(),t.tryFight(),t.getPlayerStats(),console.log("attack from player 1")},document.getElementById("player2-attack").onclick=function(){t.getPlayerStats(),t.tryFight(),t.getPlayerStats(),console.log("attack from player 2")},document.getElementById("player1-defend").onclick=function(){t.getPlayerStats(),t.tryFight(),t.getPlayerStats(),console.log("defend from player 1")},document.getElementById("player2-defend").onclick=function(){t.getPlayerStats(),t.tryFight(),t.getPlayerStats(),console.log("defend from player 2")}},e.prototype.tryFight=function(){var t,o,e=this;e.isReadyToFight()&&(0<e.player1.health&&0<e.player2.health?(this.activePlayer="player1"===this.activePlayer?"player2":"player1",t=e[e.activePlayer],o=e["player1"===e.activePlayer?"player2":"player1"],t.inTurn=!0,o.inTurn=!1,t.fighting=!0,o.fighting=!0,t.fighting=!0,o.fighting=!0,o.defending?(o.defending=!0,o.health=o.health-t.weapon.damage/2):o.health=o.health-t.weapon.damage,console.log(o.health),t.defending?(t.defending=!0,t.health=t.health-t.weapon.damage/2):t.health=t.health-t.weapon.damage,console.log(t.health)):(e.player2.health<=0&&alert("PLAYER 1 WINS !!!"),e.player1.health<=0&&alert("PLAYER 2 WINS !!!"),e.gameSetup()))},$(window).on("load",function(){document.getElementById("newGameBtn").addEventListener("click",function(){(new e).gameSetup()})})}();